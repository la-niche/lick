name: CI
on:
  pull_request:
  workflow_dispatch:

concurrency:
  # auto-cancel any in-progress job *on the same branch*
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true
    - run: uvx check-manifest
    - run: uv build

  unit-tests:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        include:
        - os: macos-latest
          python-version: '3.12'
        - os: windows-latest
          python-version: '3.12'
        - os: ubuntu-20.04
          python-version: '3.9'
          install-args: --resolution=lowest-direct

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Build
      run: |
        uv venv --python ${{ matrix.python-version }}
        uv pip install . --no-deps
        uv pip compile pyproject.toml --no-build ${{ matrix.install-args }} | uv pip install -r -
        uv pip install --requirement requirements/tests.txt

    - run: uv pip list

    - name: Test
      run: uv run pytest --color=yes -ra

  image-tests:
    name: Image tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true
    - name: Build
      run: |
        uv venv --python 3.12
        uv sync
        uv pip install --requirement requirements/tests.txt

    - run: uv pip list

    - name: Run Image Tests
      run: |
        uv run pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-summary=html \
               --mpl-results-path=lick_pytest_mpl_results \
               --mpl-baseline-path=tests/pytest_mpl_baseline

    - name: Generate new image baseline
      if: failure()
      run: |
        uv run pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-path=lick_pytest_mpl_new_baseline \
               --last-failed

    # always attempt to upload artifacts, even
    # (and especially) in case of failure.
    - name: Upload pytest-mpl report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lick_pytest_mpl_results
        path: lick_pytest_mpl_results/*

    - name: Upload pytest-mpl baseline
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lick_pytest_mpl_new_baseline
        path: lick_pytest_mpl_new_baseline/*
        if-no-files-found: ignore



  typecheck:
    runs-on: ubuntu-latest
    name: type check

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Build
      run: |
        uv venv --python 3.9
        uv sync
        uv pip install --requirement requirements/typecheck.txt

    - run: uv pip list

    - run: uv run mypy src/lick
